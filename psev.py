import time
import hashlib
import random

# 1Ô∏è‚É£ Blum-Blum-Shub (BBS)
def bbs_random(seed, p=499, q=547):
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Blum-Blum-Shub (BBS)"""
    n = p * q  # –í—ã—á–∏—Å–ª—è–µ–º –º–æ–¥—É–ª—å
    seed = (seed ** 2) % n  # –í–æ–∑–≤–æ–¥–∏–º seed –≤ –∫–≤–∞–¥—Ä–∞—Ç –∏ –±–µ—Ä–µ–º –æ—Å—Ç–∞—Ç–æ–∫
    return seed % 900000 + 100000  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 6-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ

# 2Ô∏è‚É£ –õ–∏–Ω–µ–π–Ω—ã–π –∫–æ–Ω–≥—Ä—É—ç–Ω—Ç–Ω—ã–π –º–µ—Ç–æ–¥ (LCG)
def lcg_random(seed, a=1664525, c=1013904223, m=2**32):
    """–õ–∏–Ω–µ–π–Ω—ã–π –∫–æ–Ω–≥—Ä—É—ç–Ω—Ç–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (LCG)"""
    seed = (a * seed + c) % m
    return (seed % 900000) + 100000  # 6-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ

# 3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ MD5-—Ö—ç—à–∞
def md5_random(seed):
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª —á–µ—Ä–µ–∑ —Ö—ç—à MD5"""
    hash_value = hashlib.md5(str(seed).encode()).hexdigest()  # –ë–µ—Ä–µ–º —Ö—ç—à
    return (int(hash_value[:6], 16) % 900000) + 100000  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 6 —Ü–∏—Ñ—Ä

# 4Ô∏è‚É£ –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä Python (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
def python_random():
    """–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä random.randint()"""
    return random.randint(100000, 999999)

# üìå –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã
if __name__ == "__main__":
    seed = int(time.time())  # –ë–µ—Ä–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∫–∞–∫ seed

    print(f"üîπ BBS: {bbs_random(seed)}")
    print(f"üîπ LCG: {lcg_random(seed)}")
    print(f"üîπ MD5: {md5_random(seed)}")
    print(f"üîπ Python Random: {python_random()}")
